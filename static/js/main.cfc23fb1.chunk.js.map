{"version":3,"sources":["services/AuthService.ts","components/Copyright.tsx","components/SignIn.tsx","other/listItems.tsx","containers/Dashboard.tsx","App.tsx","theme.tsx","serviceWorker.ts","index.tsx"],"names":["AuthService","_isAuthenticated","this","Promise","resolve","reject","token","String","localStorage","getItem","e","console","error","removeAuth","options","method","url","process","headers","Accept","Authorization","axios","then","response","status","addAuth","catch","username","password","data","setItem","removeItem","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","card","minWidth","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignIn","authService","classes","useState","isLoginError","setIsLoginError","isLoading","setIsLoading","history","useHistory","from","useLocation","state","pathname","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","FormData","currentTarget","get","signIn","replace","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","type","FormControlLabel","control","Checkbox","value","Card","CardContent","Button","disabled","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","Dashboard","React","open","setOpen","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","Drawer","Divider","List","HomeRoute","children","rest","location","authenticate","push","render","isAuthenticated","to","SignInRoute","log","DashboardRoute","App","path","exact","createMuiTheme","red","A400","background","default","Boolean","window","hostname","match","ReactDOM","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfc23fb1.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nclass AuthService {\r\n  private _isAuthenticated: boolean;\r\n  public get isAuthenticated(): boolean {\r\n    return this._isAuthenticated;\r\n  }\r\n\r\n  constructor() {\r\n    this._isAuthenticated = false;\r\n  }\r\n\r\n  public authenticate(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      if (this._isAuthenticated) resolve();\r\n\r\n      let token: string = '';\r\n      try {\r\n        token = String(localStorage.getItem('token'));\r\n      } catch (e) {\r\n        console.error('Local Storage not supported');\r\n      }\r\n\r\n      if (!token) {\r\n        this.removeAuth();\r\n        reject();\r\n      }\r\n\r\n      const url = `${process.env.REACT_APP_API_BASE_URL}${process.env.REACT_APP_API_AUTH}`;\r\n      const options: AxiosRequestConfig = {\r\n        method: 'GET',\r\n        url: url,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json;charset=UTF-8',\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      };\r\n      axios(options)\r\n        .then((response: AxiosResponse<any>) => {\r\n          const responseOK = response && response.status === 200;\r\n          if (responseOK) {\r\n            this.addAuth();\r\n            resolve();\r\n          } else {\r\n            this.removeAuth();\r\n            reject();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.removeAuth();\r\n          reject();\r\n        });\r\n    });\r\n  }\r\n\r\n  public signIn(username: string, password: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      const url = `${process.env.REACT_APP_API_BASE_URL}${process.env.REACT_APP_API_LOGIN}`;\r\n      const options: AxiosRequestConfig = {\r\n        method: 'POST',\r\n        url: url,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json;charset=UTF-8'\r\n        },\r\n        data: {\r\n          username,\r\n          password\r\n        }\r\n      };\r\n      axios(options)\r\n        .then((response: AxiosResponse<any>) => {\r\n          const responseOK = response && response.status === 201;\r\n          if (responseOK) {\r\n            this.addAuth(response.data.token);\r\n            resolve();\r\n          } else {\r\n            this.removeAuth();\r\n            reject();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.removeAuth();\r\n          reject();\r\n        });\r\n    });\r\n  }\r\n\r\n  public signOut(): Promise<void> {\r\n    return new Promise<void>(resolve => {\r\n      this.removeAuth();\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  private addAuth(token?: string): void {\r\n    if (token) {\r\n      try {\r\n        localStorage.setItem('token', token);\r\n      } catch (e) {\r\n        console.error('Local Storage not supported');\r\n      }\r\n    }\r\n    this._isAuthenticated = true;\r\n  }\r\n\r\n  private removeAuth(): void {\r\n    try {\r\n      localStorage.removeItem('token');\r\n    } catch (e) {\r\n      console.error('Local Storage not supported');\r\n    }\r\n    this._isAuthenticated = false;\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst Copyright: React.FC = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>\r\n      {` ${new Date().getFullYear()}.`}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React, { FormEvent, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\n\r\nimport AuthService from '../services/AuthService';\r\nimport Copyright from './Copyright';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  card: {\r\n    minWidth: 275\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\ninterface SignInProps {\r\n  authService: AuthService;\r\n}\r\n\r\nconst SignIn: React.FC<SignInProps> = ({ authService }) => {\r\n  const classes = useStyles();\r\n  const [isLoginError, setIsLoginError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: `${process.env.PUBLIC_URL}/` } };\r\n\r\n  const onSubmitLogin = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const data = new FormData(event.currentTarget);\r\n    const username: string = String(data.get('username'));\r\n    const password: string = String(data.get('password'));\r\n    authService\r\n      .signIn(username, password)\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        history.replace(from);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n        setIsLoginError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmitLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={() => setIsLoginError(false)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={() => setIsLoginError(false)}\r\n          />\r\n          <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\r\n          {isLoginError && (\r\n            <Card className={classes.card}>\r\n              <CardContent>\r\n                <Typography variant=\"body1\" component=\"p\" color=\"error\">\r\n                  Incorrect username and / or password.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n          {isLoading ? (\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} disabled>\r\n              <HourglassEmptyIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              Sign In\r\n            </Button>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <Copyright />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Panou principal\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <EmojiFoodBeverageIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Aparate\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ListAltIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Ingrediente\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <MapIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Locatii\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Contul meu</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AccountBoxIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Detalii cont\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LockIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Schimbare parola\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ExitToAppIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Deconectare\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport { mainListItems, secondaryListItems } from '../other/listItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column'\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  }\r\n}));\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Panou principal\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={0} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <h1>Welcome</h1>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n  RouteProps\n} from 'react-router-dom';\n\nimport AuthService from './services/AuthService';\nimport SignIn from './components/SignIn';\nimport Dashboard from './containers/Dashboard';\n\nconst App: React.FC = () => {\n  const [authService] = useState(new AuthService());\n\n  return (\n    <Router>\n      <Switch>\n        <HomeRoute authService={authService} path={`${process.env.PUBLIC_URL}/`} exact>\n          <h1>Loading...</h1>\n        </HomeRoute>\n        <SignInRoute authService={authService} path={`${process.env.PUBLIC_URL}/signIn`}>\n          <SignIn authService={authService} />\n        </SignInRoute>\n        <DashboardRoute authService={authService} path={`${process.env.PUBLIC_URL}/dashboard`}>\n          <Dashboard />\n        </DashboardRoute>\n      </Switch>\n    </Router>\n  );\n};\n\ninterface PrivateRouteProps extends RouteProps {\n  authService: AuthService;\n}\n\nconst HomeRoute: React.FC<PrivateRouteProps> = ({ authService, children, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: `${process.env.PUBLIC_URL}/` } };\n\n  const authenticate = (): void => {\n    authService\n      .authenticate()\n      .then(() => {\n        history.replace(from);\n      })\n      .catch(() => {\n        history.push(`${process.env.PUBLIC_URL}/signIn`, { from: location });\n      });\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (authService.isAuthenticated) {\n          return (\n            <Redirect\n              to={{\n                pathname: `${process.env.PUBLIC_URL}/dashboard`,\n                state: { from: location }\n              }}\n            />\n          );\n        } else {\n          authenticate();\n          return children;\n        }\n      }}\n    />\n  );\n};\n\nconst SignInRoute: React.FC<PrivateRouteProps> = ({ authService, children, ...rest }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: `${process.env.PUBLIC_URL}/` } };\n\n  const authenticate = (): void => {\n    authService\n      .authenticate()\n      .then(() => {\n        history.replace(from);\n      })\n      .catch(() => {\n        console.log('Unauthenticated');\n      });\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (authService.isAuthenticated) {\n          return (\n            <Redirect\n              to={{\n                pathname: `${process.env.PUBLIC_URL}/dashboard`,\n                state: { from: location }\n              }}\n            />\n          );\n        } else {\n          authenticate();\n          return children;\n        }\n      }}\n    />\n  );\n};\n\nconst DashboardRoute: React.FC<PrivateRouteProps> = ({ authService, children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        authService.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: `${process.env.PUBLIC_URL}/signIn`,\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default App;\n","import red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6'\r\n    },\r\n    secondary: {\r\n      main: '#19857b'\r\n    },\r\n    error: {\r\n      main: red.A400\r\n    },\r\n    background: {\r\n      default: '#fff'\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'dotenv/config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}